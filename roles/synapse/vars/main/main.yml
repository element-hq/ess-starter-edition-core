# Copyright 2023-2024 New Vector Ltd
#
# SPDX-License-Identifier: AGPL-3.0-or-later


---
synapse_workers: "{{ config.workers | default([]) }}"
synapse_appservices_registrations: "{{ config.application_services_registrations | default([]) }}"
synapse_configured_workers: "{{ dict(synapse_workers | selectattr('instances', 'defined')
                                                     | selectattr('instances', '>', 0)
                                                     | groupby('type')
                                                     | rejectattr('1.1', 'defined')
                                                     | map('flatten')) }}"  # The rejectattr removes all types where there's more than 1 item in the list
has_any_workers: "{{ (synapse_configured_workers.values() | sum(attribute='instances')) > 0 }}"

# Create a dict of each worker type: false
# Create a dict of present worker types: true
# Merge the 2 with the latter on top
synapse_has: "{{ synapse_available_worker_types.keys() | product([false]) | list | items2dict(key_name=0, value_name=1)
                  | combine(synapse_configured_workers.keys() | product([true]) | list | items2dict(key_name=0, value_name=1)) }}"

synapse_stream_writer_worker_types: >-
  {{ synapse_available_worker_types
  | dict2items
  | selectattr('value.stream_writers', 'defined')
  | map(attribute='key') | list }}

# static workers config that can't be tweaked by the user.
# user-controllable config like caches should be specified by the
# user in the main or worker config of the CustomResource.
synapse_available_worker_types:
  appservice:
    app: generic_worker
    single: true
  background:
    app: generic_worker
    single: true  # As per worker docs
  client-reader:
    app: generic_worker
    single: false
    paths:
    # Client API requests (apart from createRoom which is eventCreator)
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/publicRooms$"
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/joined_members$"
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/context/.*$"
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/members$"
    # We can't guarantee this goes to the same instance.
    # But it is a federated request. A misconfiguration
    # seems to generate a really small volume of bad requests on matrix.org.
    # Federation is generally limited in environment deployed via the operator. for ease of maintenance
    # we are routing it to the client-reader pool as the other requests.
    # Should be fixed by : https://github.com/matrix-org/synapse/issues/11717
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/messages$"
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/state$"
    - "^/_matrix/client/v1/rooms/.*/hierarchy$"
    - "^/_matrix/client/(v1|unstable)/rooms/.*/relations/"
    - "^/_matrix/client/v1/rooms/.*/threads$"
    - "^/_matrix/client/unstable/im.nheko.summary/rooms/.*/summary$"
    - "^/_matrix/client/(r0|v3|unstable)/account/3pid$"
    - "^/_matrix/client/(r0|v3|unstable)/account/whoami$"
    - "^/_matrix/client/(r0|v3|unstable)/devices$"
    - "^/_matrix/client/versions$"
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/voip/turnServer$"
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/event/"
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/joined_rooms$"
    - "^/_matrix/client/v1/rooms/.*/timestamp_to_event$"
    - "^/_matrix/client/(api/v1|r0|v3|unstable/.*)/rooms/.*/aliases"
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/search$"
    - "^/_matrix/client/(r0|v3|unstable)/user/.*/filter(/|$)"
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/directory/room/.*$"
    - "^/_matrix/client/(r0|v3|unstable)/capabilities$"
    - "^/_matrix/client/(r0|v3|unstable)/notifications$"
    # Registration/login requests
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/login$"
    - "^/_matrix/client/(r0|v3|unstable)/register$"
    - "^/_matrix/client/(r0|v3|unstable)/register/available$"
    - "^/_matrix/client/v1/register/m.login.registration_token/validity$"
    - "^/_matrix/client/(r0|v3|unstable)/password_policy$"
    # Encryption requests
    - "^/_matrix/client/(r0|v3|unstable)/keys/query$"
    - "^/_matrix/client/(r0|v3|unstable)/keys/changes$"
    # On m.org /keys/claim & /room_keys go to the encryption worker but the above 2 go to client-reader
    # https://github.com/matrix-org/synapse/pull/11599 makes no claim that there are efficency
    # reasons to go to the encryption worker, so put them on the client-reader
    - "^/_matrix/client/(r0|v3|unstable)/keys/claim$"
    - "^/_matrix/client/(r0|v3|unstable)/room_keys/"
    - "^/_matrix/client/(r0|v3|unstable)/keys/upload"
    paths_get_only:
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/pushrules/"
  encryption:
    app: generic_worker
    single: true  # Unsure if this is true but m.org only has 1 atm
    stream_writers: [to_device]
    paths:
    - "^/_matrix/client/(r0|v3|unstable)/sendToDevice/"
  event-creator:
    app: generic_worker
    single: false
    paths:
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/redact"
    # v2_alpha is never used anymore, but there are still tracks of this endpoint in the source code
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/send"
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/state/"
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/(join|invite|leave|ban|unban|kick)$"
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/join/"
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/knock/"
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/profile/"
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/createRoom$"
  event-persister:
    app: generic_worker
    single: false
    stream_writers: [events]
  federation-inbound:
    app: generic_worker
    single: false
    paths:
    # Inbound federation transaction request
    - "^/_matrix/federation/v1/send/"
  federation-reader:
    app: generic_worker
    single: false
    paths:
    # All Federation REST requests for generic_worker
    - "^/_matrix/federation/v1/event/"
    - "^/_matrix/federation/v1/state/"
    - "^/_matrix/federation/v1/state_ids/"
    - "^/_matrix/federation/v1/backfill/"
    - "^/_matrix/federation/v1/get_missing_events/"
    - "^/_matrix/federation/v1/publicRooms"
    - "^/_matrix/federation/v1/query/"
    - "^/_matrix/federation/v1/make_join/"
    - "^/_matrix/federation/v1/make_leave/"
    - "^/_matrix/federation/(v1|v2)/send_join/"
    - "^/_matrix/federation/(v1|v2)/send_leave/"
    - "^/_matrix/federation/v1/make_knock/"
    - "^/_matrix/federation/v1/send_knock/"
    - "^/_matrix/federation/(v1|v2)/invite/"
    # Not in public docs but on matrix.org
    - "^/_matrix/federation/v1/query_auth/"
    - "^/_matrix/federation/v1/event_auth/"
    - "^/_matrix/federation/v1/timestamp_to_event/"
    - "^/_matrix/federation/v1/exchange_third_party_invite/"
    - "^/_matrix/federation/v1/user/devices/"
    - "^/_matrix/key/v2/query"
    - "^/_matrix/federation/v1/hierarchy/"
  federation-sender:
    app: generic_worker
    single: false
  # Deprecated, remove me. Only kept in for CRD compatibility
  frontend-proxy:
    app: generic_worker
    single: false
  initial-synchrotron:
    name_override: initial-sync
    app: generic_worker
    single: false
    paths:
    - ^/_matrix/client/(api/v1|r0|v3)/initialSync$
    - ^/_matrix/client/(api/v1|r0|v3)/rooms/[^/]+/initialSync$
    # Path will be merged in synchrotron if initial-synchrotron is not deployed
  media-repository:
    app: media_repository
    single: true  # Not strictly true but for simplicity with PVCs at present
    paths:
    - "^/_matrix/media/"
    - "^/_synapse/admin/v1/purge_media_cache$"
    - "^/_synapse/admin/v1/room/.*/media.*$"
    - "^/_synapse/admin/v1/user/.*/media.*$"
    - "^/_synapse/admin/v1/media/.*$"
    - "^/_synapse/admin/v1/quarantine_media/.*$"
    - "^/_synapse/admin/v1/users/.*/media$"
  presence-writer:
    app: generic_worker
    single: true  # Unsure if this is true but m.org only has 1 atm
    stream_writers: [presence]
    paths:
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/presence/"
  pusher:
    app: generic_worker
    single: false
  receipts-account:
    app: generic_worker
    single: true  # Unsure if this is true but m.org only has 1 atm
    stream_writers: [account_data, receipts]
    paths:
    - "^/_matrix/client/(r0|v3|unstable)/.*/tags"
    - "^/_matrix/client/(r0|v3|unstable)/.*/account_data"
    - "^/_matrix/client/(r0|v3|unstable)/rooms/.*/receipt"
    - "^/_matrix/client/(r0|v3|unstable)/rooms/.*/read_markers"
  sso-login:
    app: generic_worker
    single: true  # As per worker docs
    paths:
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/login/sso/redirect"
    - "^/_synapse/client/pick_idp$"
    - "^/_synapse/client/pick_username"
    - "^/_synapse/client/new_user_consent$"
    - "^/_synapse/client/sso_register$"
    - "^/_synapse/client/oidc/callback$"
    - "^/_synapse/client/saml2/authn_response$"
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/login/cas/ticket$"
  synchrotron:
    app: generic_worker
    single: false
    paths:
    - "^/_matrix/client/(r0|v3)/sync$"
    - "^/_matrix/client/(api/v1|r0|v3)/events$"
  typing-persister:
    app: generic_worker
    single: true  # Unsure if this is true but m.org only has 1 atm
    stream_writers: [typing]
    paths:
    - "^/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/typing"
  user-dir:
    app: generic_worker
    single: true
    paths:
    - "^/_matrix/client/(r0|v3|unstable)/user_directory/search$"
