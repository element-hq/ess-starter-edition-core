{#
Copyright 2023-2024 New Vector Ltd

SPDX-License-Identifier: AGPL-3.0-or-later

#}

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: synapse-redis
    app.kubernetes.io/instance: "{{ ansible_operator_meta.name }}-synapse-redis"
    app.kubernetes.io/part-of: matrix-stack
    app.kubernetes.io/component: matrix-server-pubsub
    app.kubernetes.io/version: "{{ image.redis_tag | default(redis_image_tag) }}"
    k8s.element.io/confighash: "{{ redis_config | hash('sha1') }}"
{% if workloads.redis.annotations | default({}) %}
  annotations:
    {{ _matrix_element_io_synapse_spec.workloads.redis.annotations | to_nice_yaml(indent=2) | indent(4) }}
{% endif %}
  name: "{{ ansible_operator_meta.name }}-synapse-redis"
  namespace: "{{ ansible_operator_meta.namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: "{{ ansible_operator_meta.name }}-synapse-redis"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: synapse-redis
        app.kubernetes.io/instance: "{{ ansible_operator_meta.name }}-synapse-redis"
        app.kubernetes.io/part-of: matrix-stack
        app.kubernetes.io/component: matrix-server-pubsub
        app.kubernetes.io/version: "{{ image.redis_tag | default(redis_image_tag) }}"
        k8s.element.io/confighash: "{{ redis_config | hash('sha1') }}"
{% if workloads.redis.annotations | default({}) %}
      annotations:
        {{ _matrix_element_io_synapse_spec.workloads.redis.annotations | to_nice_yaml(indent=2) | indent(8) }}
{% endif %}
    spec:
      automountServiceAccountToken: false
{% if (image.pull_secrets | default(image_pull_secrets)) | length > 0 %}
      imagePullSecrets:
      {{ (image.pull_secrets | default(image_pull_secrets)) | to_nice_yaml(indent=6) | indent(6) }}
{% endif %}{% if (_matrix_element_io_synapse_spec.config.redisPodSecurityContext | default({})) | length > 0 %}
      securityContext:
        {{ _matrix_element_io_synapse_spec.config.redisPodSecurityContext | to_nice_yaml(indent=2) | indent(8) }}
{% endif %}
{% if (_matrix_element_io_synapse_spec.workloads.redis.nodeSelector | default({})) | length > 0 %}
      nodeSelector:
        {{ _matrix_element_io_synapse_spec.workloads.redis.nodeSelector | to_nice_yaml(indent=2) | indent(8) }}
{% endif %}
{% if (_matrix_element_io_synapse_spec.workloads.redis.tolerations | default({})) | length > 0 %}
      tolerations:
        {{ _matrix_element_io_synapse_spec.workloads.redis.tolerations | to_nice_yaml(indent=2) | indent(8) }}
{% endif %}
      containers:
      - name: redis
{% if image_redis_has_digest %}
        image: "{{ image.redis_repository | default(redis_image_repository) }}@{{ image.redis_digest }}"
{% else %}
        image: "{{ image.redis_repository | default(redis_image_repository) }}:{{ image.redis_tag | default(redis_image_tag) }}"
{% endif %}
        imagePullPolicy: "{{ image.redisPullPolicy | default(image_redis_pull_policy) }}"
{% if (_matrix_element_io_synapse_spec.config.redisContainersSecurityContext | default({})) | length > 0 %}
        securityContext:
          {{ _matrix_element_io_synapse_spec.config.redisContainersSecurityContext | to_nice_yaml(indent=2) | indent(10) }}
{% endif %}
        name: redis
        args:
        - "/config/redis.conf"
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 15
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
        resources:
          {{ config.redis_resources | to_nice_yaml(indent=10) | indent(10) }}
        volumeMounts:
        - mountPath: /config/redis.conf
          name: redis-config
          readOnly: true
          subPath: redis.conf
        - mountPath: /data
          name: data
          readOnly: false
      restartPolicy: Always
      volumes:
      - configMap:
          name: "{{ ansible_operator_meta.name }}-synapse-redis"
          defaultMode: 420
        name: redis-config
      - emptyDir:
          medium: Memory
        name: data
