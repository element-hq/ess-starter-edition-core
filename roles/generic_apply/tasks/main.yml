# Copyright 2023-2024 New Vector Ltd
#
# SPDX-License-Identifier: AGPL-3.0-or-later


---
- name: "Prepare Manifests"
  ansible.builtin.set_fact:
    # These are strings each containing a single YAML document
    _individual_manifest_strings: >
      {{
        (
          (_rendered_manifests_strings | default([]))
          + query('template',
                  *(_manifest_template_filenames | default([]))
                 )
        )
        | map('split_regex', '^---$')
        | flatten
        | map('trim')
        | select
      }}

- name: "Display deployed template for all components"
  ansible.builtin.debug:
    msg: "{{ _individual_manifest_strings | list }}"
  when: lookup('env', 'DEBUG_MANIFESTS') | int == 1

# Because we are using the same field-manager for each reconciliation loop
# Removing a field from the manifest will effectively drop it from the resource
# Without this, null values are causing errors such as
# spec.workloads.synapse: Invalid value: "null" spec.workloads.synapse in body must be of type object
- name: "Construct Manifests"
  ansible.builtin.set_fact:
    # These are objects after various processing has been done to them
    _prepared_manifest_objects: >
      {{
        _individual_manifest_strings
        | map('from_yaml')
        | map('drop_null_values')
        | select
        | map('combine', _generic_apply_mixin, recursive=true)
        | sort_apply_order
      }}


- name: Apply Manifest in check_mode
  check_mode: true
  kubernetes.core.k8s:
    resource_definition: "{{ _prepared_manifest_objects }}"
  when: _prepared_manifest_objects | length > 0
  register: result
  failed_when:
  - ('msg' in result)
  - ("in body must be of type object:" not in result.msg)
  - ("updates to statefulset spec for fields other than" not in result.msg)
  - ("missing metadata in converted object" not in result.msg)

- name: "Maintain resources that risk to not support recreation"
  kubernetes.core.k8s:
    resource_definition: "{{ _risky_manifest_objects }}"
  vars:
    # noqa: jinja[invalid]
    _risky_manifest_objects: >
      {{
        _prepared_manifest_objects
        | selectattr('kind', 'eq', 'PersistentVolumeClaim')
      }}
  when: _risky_manifest_objects | length > 0

- name: Maintain resources that support recreation
  ansible.builtin.include_tasks: "apply_then_recreate.yml"
  vars:
    # noqa: jinja[invalid]
    _non_risky_manifest_objects: >
      {{
        _prepared_manifest_objects
        | rejectattr('kind', 'eq', 'PersistentVolumeClaim')
      }}
  loop: "{{ _non_risky_manifest_objects }}"
  loop_control:
    loop_var: "_manifest"
