{#
Copyright 2023 New Vector Ltd

SPDX-License-Identifier: AGPL-3.0-or-later

#}

apiVersion: matrix.element.io/v1alpha1
kind: WellKnownDelegation
metadata:
  name: "{{ ansible_operator_meta.name }}"
  namespace: "{{ ansible_operator_meta.namespace }}"
  labels:
    k8s.element.io/crdhash: "{{ crd_spec_hash }}"
    app.kubernetes.io/managed-by: element-updater
spec:
  {{ lookup('template', 'templates/any/k8s-image.yaml.j2') | indent(2) }}
  {{ lookup('template', 'templates/any/k8s-workloads.yaml.j2') | indent(2) }}
  service:
    {{ lookup('template', 'templates/any/k8s-services.yaml.j2') | indent(4) }}
  ingress:
    {{ lookup('template', 'templates/any/k8s-ingress.yaml.j2',
        template_vars={'_tls_secret': 'wellknowndelegation-tls-secret',
                       '_ingress_fqdn': global.config.domain_name}) | indent(4) }}
  config:
    {{ lookup('template', 'templates/any/k8s-host-aliases.yaml.j2') | indent(4) }}
    {{ lookup('template', 'templates/any/k8s-config.yaml.j2') | indent(4) }}
    client:
      homeserverBaseUrl: https://{{ components.synapse.k8s.ingress.fqdn }}
{% set _client_config_template_files = query('fileglob', 'templates/well_known_delegation/config_client/*.json.j2') | sort %}
{% set _additional_client_configs = query('template', *_client_config_template_files, convert_data=false) | select | map('trim') | select | map('from_json') %}
{% if _additional_client_configs | length > 0 %}
      additional: |
        {{ ({} | combine(_additional_client_configs, recursive=true) | to_nice_json(indent=2) | indent(8) | trim)[1:-1] }}

{% endif %}
    federation:
      endpoint: {{ components.synapse.k8s.ingress.fqdn }}:443
{% set _server_config_template_files = query('fileglob', 'templates/well_known_delegation/config_server/*.json.j2') | sort %}
{% set _additional_server_configs = query('template', *_server_config_template_files, convert_data=false) | select | map('trim') | select | map('from_json') %}
{% if _additional_server_configs | length > 0 %}
      additional: |
        {{ ({} | combine(_additional_server_configs, recursive=true) | to_nice_json(indent=2) | indent(8) | trim)[1:-1] }}

{% endif %}
