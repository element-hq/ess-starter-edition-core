# Copyright 2023-2024 New Vector Ltd
#
# SPDX-License-Identifier: AGPL-3.0-or-later


---
- name: "Find possible teardown candidates"
  vars:
    _label_selectors:
    - "app.kubernetes.io/managed-by={{ kind_managed_by }}"
  ansible.builtin.set_fact:
    _teardown_candidates: |
      {% set teardown_candidates = [] %}
      {% for kind_to_teardown in kinds_to_teardown %}
      {% if kind_to_teardown.api_version in _cluster_info.apis
          and kind_to_teardown.kind in _cluster_info.apis[kind_to_teardown.api_version] %}
      {% set _ = teardown_candidates.extend(
          query('kubernetes.core.k8s',
                namespace=ansible_operator_meta.namespace,
                kind=kind_to_teardown.kind,
                api_version=kind_to_teardown.api_version,
                label_selector=_label_selectors | join(',')
              )
            | mapattributes(['apiVersion', 'kind', 'metadata'])
            | ansible.utils.remove_keys(target='managedFields')
          ) %}
      {% endif %}
      {% endfor %}
      {{ teardown_candidates }}

- name: "Filter down to resources managed by this CRD"
  ansible.builtin.set_fact:
    _teardown_candidates_with_correct_owner: >-
      {{ _teardown_candidates
          | community.general.json_query(query_owner_kind)
          | community.general.json_query(query_owner_name)
      }}
  vars:
    query_owner_kind: "[?metadata.ownerReferences[?kind == `{{ kind_owner }}`]]"
    query_owner_name: "[?metadata.ownerReferences[?name == '{{ ansible_operator_meta.name }}']]"

- name: "Filter out resources still managed by this CRD"
  ansible.builtin.set_fact:
    _to_teardown: |
      {% set to_teardown = [] %}
      {% for item in _teardown_candidates_with_correct_owner %}
      {% set id = item.apiVersion ~ "/" ~ item.kind ~ "/" ~ item.metadata.namespace ~ "/" ~ item.metadata.name %}
      {% if id not in _owned_managed_manifests_ids %}
      {% set _ = to_teardown.append(item) %}
      {% endif %}
      {% endfor %}
      {{ to_teardown }}


- name: "Remove unused resources"
  kubernetes.core.k8s:
    state: absent
    definition: >-
      {{
        _to_teardown
      }}
