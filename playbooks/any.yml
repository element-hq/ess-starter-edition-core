# Copyright 2023-2024 New Vector Ltd
#
# SPDX-License-Identifier: AGPL-3.0-or-later


---
- name: "Reconcile"
  hosts: localhost
  gather_facts: false
  module_defaults:
    kubernetes.core.k8s:
      apply: true
      server_side_apply:
        field_manager: element-operator
        force_conflicts: true
  tasks:
  - name: Fetch owner metadata
    ansible.builtin.set_fact:
      _owner: "{{ lookup('kubernetes.core.k8s',
                        api_version=_api_version,
                        kind=_kind,
                        namespace=ansible_operator_meta.namespace,
                        resource_name=ansible_operator_meta.name) }}"
      _owned_managed_manifests_ids: []

  - name: Fetch APIs available
    kubernetes.core.k8s_cluster_info:
      invalidate_cache: false
    register: _cluster_info

  - name: "Run {{ _kind | lower }}"
    ansible.builtin.import_role:
      name: "{{ _kind | lower }}"

  - name: "Perform teardown for {{ _kind }}"
    ansible.builtin.import_role:
      name: "teardown"
    vars:
      kind_managed_by: "{{ _managed_by }}"
      kind_owner: "{{ _kind }}"
  vars:
    # Server Side Apply uses PATCH whilst currently (1.29) operator-sdk only intercepts POST
    # So we need to add in the correct ownerReferences
    # Unfortunately we're only given namespace & name as variables, so we need to fetch the uid
    # and pass in everything else
    _owner_refs_metadata:
      metadata:
        ownerReferences:
        - apiVersion: "{{ _owner.apiVersion }}"
          kind: "{{ _owner.kind }}"
          name: "{{ _owner.metadata.name }}"
          uid: "{{ _owner.metadata.uid }}"

    _managed_by: "{{ 'element-updater' if _kind == 'ElementDeployment' else 'element-operator' }}"
    _managed_by_metadata:
      metadata:
        labels:
          app.kubernetes.io/managed-by: "{{ _managed_by }}"
          # https://github.com/kubernetes/client-go/issues/1085
          # We can't do server-side filtering by ownerReferences. Introduce owner labels so that, in future, we can
          # use them to do some server-side filtering using label selectors that we do client side for now
          k8s.element.io/owner-name: "{{ ansible_operator_meta.name }}"
          k8s.element.io/owner-group-kind: "{{ _kind }}"

    _generic_apply_mixin: "{{ {} | combine([_owner_refs_metadata, _managed_by_metadata], recursive=true) }}"
